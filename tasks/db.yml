---

- block:
    - name: db | (server) Ensure MySQL packages installed
      package:
        name: "{{ server_mysql_pkgs }}"
        state: 'present'
      delegate_to: "{{ backup_server }}"

    - name: db | Ensure MySQL packages installed
      package:
        name: "{{ mysql_pkgs }}"
        state: 'present'

    - name: db | Add MySQL user for backup server
      mysql_user:
        name:     "{{ item.user }}"
        password: "{{ item.password }}"
        host:     'localhost'
        priv:     '*.*:SELECT,SUPER,LOCK TABLES,SHOW VIEW,EVENT,TRIGGER'
        state:    present
        update_password: always
      when: run_mode != 'uninstall'
      loop: "{{ _backup_scripts_mysql.values() | list }}"

    - name: db | Or delete MySQL user of backup server
      mysql_user:
        name:     "{{ item.user }}"
        host:     'localhost'
        state:    absent
      when: run_mode == 'uninstall'
      loop: "{{ _backup_scripts_mysql.values() | list }}"

    - name: db | Add MySQL conf files to template list
      set_fact:
        r_data_templates: >-
          {{  [ { 'src'   : item.conf
                , 'dest'  : item.install_conf
                , 'mode'  : '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              ] + r_data_templates }}
      loop: "{{ _backup_scripts_mysql.values() | list }}"

  when: _backup_scripts_mysql | length > 0
  tags:
    - backup_mysql

- block:
    - name: db | (server) Ensure PostgreSQL packages installed
      package:
        name: "{{ server_psql_pkgs }}"
        state: 'present'
      delegate_to: "{{ backup_server }}"

    - name: db | Ensure PostgreSQL packages installed
      package:
        name: "{{ psql_pkgs }}"
        state: 'present'

    - name: db | Add PostgreSQL user for backup server
      postgresql_user:
        name:     "{{ item.user }}"
        password: "{{ item.password }}"
        role_attr_flags:  'SUPERUSER'
        state:    present
      become: yes
      become_user: 'postgres'
      loop: "{{ _backup_scripts_pgsql.values() | list }}"

    # TODO: Add remove task for postgresql too.
    # FIXME: Set up pg_hba.conf correctly.

    - name: db | Add PostgreSQL conf files to template list
      set_fact:
        r_data_templates: >-
          {{  [ { 'src'   : item.conf
                , 'dest'  : item.install_conf
                , 'mode'  : '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              , 
                { 'src' : item.passfile
                , 'dest': item.install_passfile
                , 'mode': '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              ] + r_data_templates }}
      loop: "{{ _backup_scripts_pgsql.values() | list }}"

  when: _backup_scripts_pgsql | length > 0
  tags:
    - backup_psql

