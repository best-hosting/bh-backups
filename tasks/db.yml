---

- block:
    - name: db | Ensure MySQL packages installed
      package:
        name:
          - 'python-mysqldb'
        state: 'present'

    - name: db | Add MySQL user for backup server
      mysql_user:
        name:     "{{ item.user }}"
        password: "{{ item.password }}"
        host:     'localhost'
        priv:     '*.*:SELECT,SUPER,LOCK TABLES,SHOW VIEW,EVENT,TRIGGER'
        state:    present
      loop: "{{ r_backup_scripts_mysql }}"

    - name: db | Add MySQL backup scripts to file list
      set_fact:
        r_data_files: >-
          {{  [ { 'src'   : item.script
                , 'dest'  : item.install
                , 'mode'  : '0755'
                , 'force' : true
                }
              ] + r_data_files }}
      loop: "{{ r_backup_scripts_mysql }}"

    - name: db | Add MySQL conf files to template list
      set_fact:
        r_data_templates: >-
          {{  [ { 'src'   : item.conf
                , 'dest'  : item.install_conf
                , 'mode'  : '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              ] + r_data_templates }}
      loop: "{{ r_backup_scripts_mysql }}"

    - name: db | Define dictionary used in MySQL conf template
      set_fact:
        r_backup_script_confs: >-
          {{  { item.name :
                  { 'user'      : item.user
                  , 'password'  : item.password
                  }
              } | combine(r_backup_script_confs)
          }}
      loop: "{{ r_backup_scripts_mysql }}"

  when: db_mysql

- block:
    - name: db | Ensure PostgreSQL packages installed
      package:
        name:
          - 'sudo'
          - 'python-psycopg2'
        state: 'present'

    - name: db | Add PostgreSQL user for backup server
      postgresql_user:
        name:     "{{ item.user }}"
        password: "{{ item.password }}"
        role_attr_flags:  'SUPERUSER'
        state:    present
      become: yes
      become_user: 'postgres'
      loop: "{{ r_backup_scripts_pgsql }}"

    - name: db | Add PostgreSQL backup scripts to file list
      set_fact:
        r_data_files: >-
          {{  [ { 'src'   : item.script
                , 'dest'  : item.install
                , 'mode'  : '0755'
                , 'force' : true
                }
              ] + r_data_files }}
      loop: "{{ r_backup_scripts_pgsql }}"

    - name: db | Add PostgreSQL conf files to template list
      set_fact:
        r_data_templates: >-
          {{  [ { 'src'   : item.conf
                , 'dest'  : item.install_conf
                , 'mode'  : '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              , 
                { 'src' : item.passfile
                , 'dest': item.install_passfile
                , 'mode': '0700'
                , 'r_name': item.name
                , 'force' : true
                }
              ] + r_data_templates }}
      loop: "{{ r_backup_scripts_pgsql }}"

    - name: db | Define dictionary used in PostgreSQL conf template
      set_fact:
        r_backup_script_confs: >-
          {{  { item.name :
                  { 'user'      : item.user
                  , 'password'  : item.password
                  , 'install_passfile'  : item.install_passfile
                  }
              } | combine(r_backup_script_confs)
          }}
      loop: "{{ r_backup_scripts_pgsql }}"

  when: db_postgresql

  # FIXME: Set up pg_hba.conf correctly.
