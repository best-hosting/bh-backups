---

# Cron files disallow some symbols in filenames, thus i use this normalized id
# instead of 'inventory_hostname' everywhere too.
host_id: >-
  {{ inventory_hostname | regex_replace('[^a-zA-Z0-9_-]', '_') }}

# Current server snapshot root. Does NOT include trailing slash!
r_snapshot_root: >-
  {{ hostvars[backup_server]['r_backup_root'] + '/' + host_id }}

# vars file for bh-backups
rsync_filters_dir: "{{ install_path + '/rsnapshot.d' }}"
rsync_filters_libdir: "{{ install_path + '/rsnapshot.d/lib' }}"

r_data_templates: []
r_data_files: []

# By default, at least ssh config entry for current host is required.
r_ssh_hosts:
  - ssh_host: "{{ host_id }}"
    ssh_hostname: "{{ ansible_host }}"

ssh_host_keys: []

# I _need_ gather facts run against backup_server, to initialize these
# variables!
backup_user: "{{ hostvars[backup_server]['ansible_user_id'] }}"
backup_user_dir: "{{ hostvars[backup_server]['ansible_user_dir'] }}"

# Local directory for store ssh backup server user public key, which will be
# added to 'authorized_keys' on all hosts, which are backed up to this server.
server_ssh_pubkeys_dir: >-
  {{ ssh_pubkeys_dir + '/' + backup_server + '/' + backup_user }}
# Local directory for store ssh host public keys (host itself, not user). It
# will be added to 'known_hosts' on backup server, which backups this host.
host_ssh_pubkeys_dir: >-
  {{ ssh_pubkeys_dir + '/' + host_id }}

rsnapshot_pkgs:
  - 'rsnapshot'

# Packages required for 'mysql' backup script on backup server.
server_mysql_pkgs:
  - 'socat'
  - >-
    {%- if ansible_distribution == "Debian"
          and ansible_distribution_major_version | int > 7 -%}
        mariadb-client
    {%- elif ansible_distribution == "Debian" -%}
        mysql-client
    {%- endif %}

# Packages required for 'mysql' backup script on backed up host.
mysql_pkgs:
  - >-
    {% if is_python3_used -%} python3-mysqldb {%- else -%} python-mysqldb {%- endif %}

# Packages required for 'psql' backup script on backup server.
server_psql_pkgs:
  - 'socat'
  - 'postgresql-client'
  - 'sudo'

# Packages required for 'psql' backup script on backed up host.
psql_pkgs:
  - >-
    {% if is_python3_used -%} python3-psycopg2 {%- else -%} python-psycopg2 {%- endif %}


# Internal r_backups version.
_backup_points: []
# Internal r_backup_scripts version.
_backup_scripts: []

# Internal dictionary with information used by default mysql backup script
# only.
_backup_scripts_mysql: {}
# Internal dictionary with information used by default pgsql backup script
# only.
_backup_scripts_pgsql: []

rsnapshot_conf: "{{ install_path + '/rsnapshot.' + host_id + '.conf' }}"

rsnapshot_cron_file: >-
  {{ '/etc/cron.d/rsnapshot-' + host_id }}

r_files_count: {}
r_size: {}

r_scripts_file_count: {}
r_scripts_size: {}

r_files_count_raw: []
r_files_count_cache: {}
r_size_raw: []
r_size_cache: {}

r_scripts_files_count_raw: []
r_scripts_files_count_cache: {}
r_scripts_size_raw: []
r_scripts_size_cache: {}

# Cache files for calculated file count and sizes.
r_cache_dir: "{{ playbook_dir + '/rsnapshot_cache' }}"
r_files_count_cache_file: >-
  {{ r_cache_dir + '/' + host_id + '-files_count.yml' }}
r_size_cache_file: >-
  {{ r_cache_dir + '/' + host_id + '-size.yml' }}

r_scripts_files_count_cache_file: >-
  {{ r_cache_dir + '/' + host_id + '-scripts-files_count.yml' }}
r_scripts_size_cache_file: >-
  {{ r_cache_dir + '/' + host_id + '-scripts-size.yml' }}

# List of lists containing fully named backup intervals from
# 'backup_intervals'. Each list element contains list with _exactly_ two
# elements: first is backup interval name as found in 'backup_intervals' and
# second is number suffix.
all_backup_interval_names: []

# Internal backup intervals.
_backup_intervals: []

