---
# vars file for bh-backups
rsync_filters_dir: "{{ install_path + '/rsnapshot.d' }}"
rsync_filters_libdir: "{{ install_path + '/rsnapshot.d/lib' }}"

r_data_templates: []
r_data_files: []

# By default, at least ssh config entry for current host is required.
r_ssh_hosts:
  - ssh_host: "{{ inventory_hostname }}"
    ssh_hostname: "{{ ansible_host }}"

ssh_host_pubkeys_db_dir: "{{ playbook_dir + '/ssh_host_pubkeys/' + inventory_hostname }}"
ssh_host_keys: []

# I _need_ gather facts run against backup_server, to initialize these
# variables!
backup_user: "{{ hostvars[backup_server]['ansible_user_id'] }}"
backup_user_dir: "{{ hostvars[backup_server]['ansible_user_dir'] }}"

ssh_pubkeys_db_dir: "{{ playbook_dir + '/ssh_pubkeys' }}"
ssh_pubkeys_backup_server_dir: >-
  {{ ssh_pubkeys_db_dir + '/' + backup_server + '/' + backup_user }}
ssh_pubkeys_dir: >-
  {{ ssh_pubkeys_db_dir + '/' + inventory_hostname + '/' + ansible_user_id }}

rsnapshot_pkgs:
- 'rsnapshot'
# mysql script deps
- 'socat'
- >-
  {%- if ansible_distribution == "Debian"
        and ansible_distribution_major_version | int > 7 -%}
      mariadb-client
  {%- elif ansible_distribution == "Debian" -%}
      mysql-client
  {%- endif %}

r_backup_filters: {}
r_backup_script_confs: {}

# Whether to set up backups of mysql. Guessed from backup scripts.
db_mysql: >-
  {{ r_backup_scripts
      | selectattr('name', 'equalto', 'mysql')
      | list | length > 0
  }}

# Whether to set up backups of postgresql. Guessed from backup scripts.
db_postgresql: >-
  {{ r_backup_scripts
      | selectattr('name', 'equalto', 'pgsql')
      | list | length > 0
  }}

